type Query {
    greet(name: String!) : String!
    me : User!
    add(numbers: [Float!]!) : Float!
    users: [User!]!
    posts(query : String) : [Post!]!
    comments: [Comment!]!
}

type Mutation {
    createUser(data : createUserInput): User!
    createPost(data : createPostInput) : Post!
    createComment(data : createCommentInput ) : Comment!
    deletePost(id : ID!) : Post!
}

input createUserInput{
    name : String!
    email : String!
    age : Int
}
input createPostInput{
    title : String!
    body : String!
    published : Boolean!
    author : ID!
}
input createCommentInput{
    text : String!
    author : ID!
    post : ID!
}

type User { 
    id: ID!
    name: String!
    email: String!
    age: Int
    posts : [Post!]!
    comments : [Comment]!
}

type Post {
    id : ID!
    title : String!
    body : String!
    published : Boolean!
    author : User!
}
type Comment{
    id: ID!
    text: String!
    author: User!
    post: Post!
}